"""empty message

Revision ID: 2ddd660eb154
Revises: 
Create Date: 2025-02-02 15:28:52.406147

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2ddd660eb154'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conversation',
    sa.Column('headline', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_id'), 'conversation', ['id'], unique=False)
    op.create_table('document',
    sa.Column('table_name', sa.String(), nullable=False),
    sa.Column('metadata_map', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('table_name')
    )
    op.create_index(op.f('ix_document_id'), 'document', ['id'], unique=False)
    op.create_table('humanfeedback',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('assistant_message_id', sa.UUID(), nullable=True),
    sa.Column('user_message_id', sa.UUID(), nullable=True),
    sa.Column('is_good_response', sa.Boolean(), nullable=True),
    sa.Column('Thread_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_humanfeedback_id'), 'humanfeedback', ['id'], unique=False)
    op.create_table('conversationdocument',
    sa.Column('conversation_id', sa.UUID(), nullable=True),
    sa.Column('document_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversationdocument_conversation_id'), 'conversationdocument', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_conversationdocument_document_id'), 'conversationdocument', ['document_id'], unique=False)
    op.create_index(op.f('ix_conversationdocument_id'), 'conversationdocument', ['id'], unique=False)
    op.create_table('message',
    sa.Column('conversation_id', sa.UUID(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('role', postgresql.ENUM('user', 'assistant', name='MessageRoleEnum'), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'SUCCESS', 'ERROR', name='MessageStatusEnum'), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_conversation_id'), 'message', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_message_id'), 'message', ['id'], unique=False)
    op.create_table('messagesubprocess',
    sa.Column('message_id', sa.UUID(), nullable=True),
    sa.Column('source', postgresql.ENUM('CHUNKING', 'NODE_PARSING', 'EMBEDDING', 'LLM', 'QUERY', 'RETRIEVE', 'SYNTHESIZE', 'TREE', 'SUB_QUESTION', 'TEMPLATING', 'FUNCTION_CALL', 'RERANKING', 'EXCEPTION', 'AGENT_STEP', 'CONSTRUCTED_QUERY_ENGINE', 'SUB_QUESTIONS', name='MessageSubProcessSourceEnum'), nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'FINISHED', name='MessageSubProcessStatusEnum'), nullable=False),
    sa.Column('metadata_map', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['message.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messagesubprocess_id'), 'messagesubprocess', ['id'], unique=False)
    op.create_index(op.f('ix_messagesubprocess_message_id'), 'messagesubprocess', ['message_id'], unique=False)
    op.drop_table('respondents')
    op.drop_table('net_promoter_scores')
    op.drop_table('responses')
    op.drop_table('colleagues')
    op.drop_table('completed_survey')
    op.drop_table('treatment_patterns')
    op.drop_table('proxy_respondents')
    op.drop_table('demographics')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('demographics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('survey_year', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('age_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gender_male_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gender_female_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patient_age', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('respondent_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('organization', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('locality', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('region', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_alternate_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('world_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='demographics_pkey')
    )
    op.create_table('proxy_respondents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('given_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('family_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('respondent_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('organization', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('locality', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('region', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_alternate_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('world_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='proxy_respondents_pkey')
    )
    op.create_table('treatment_patterns',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('survey_year', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('patients_followed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_with_pi_defect', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_receiving_ig_g_ivig_clinic', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_receiving_ig_g_ivig_home', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_receiving_ig_g_scig', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_receiving_ig_g_other', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_treated_with_gene_therapy', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_treated_with_peg_ada', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_treated_by_transplant_donor_type_mrd', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_treated_by_transplant_donor_type_mud', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_treated_by_transplant_donor_type_m_mud', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_treated_by_transplant_donor_type_haplo', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_treated_by_transplant_stem_cell_src_bm', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_treated_by_transplant_stem_cell_src_pbsc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_treated_by_transplant_stem_cell_src_cord', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patients_treated_by_transplant_stem_cell_src_other_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('patients_treated_by_transplant_stem_cell_src_other_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('published_at', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('patients_diagnosed_through_jeffrey_insights_program', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('respondent_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('organization', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('locality', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('region', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_alternate_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('world_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='treatment_patterns_pkey')
    )
    op.create_table('completed_survey',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('survey_year', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('respondent_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('organization', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('locality', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('region', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_alternate_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('world_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='completed_survey_pkey')
    )
    op.create_table('colleagues',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('given_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('family_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('respondent_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('organization', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('locality', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('region', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_alternate_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('world_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='colleagues_pkey')
    )
    op.create_table('responses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('patients_reported', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('defect', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sub_category', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('omim_entry_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gene_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('inheritance_pattern', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('respondent_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('organization', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('locality', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('region', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_alternate_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('world_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='responses_pkey')
    )
    op.create_table('net_promoter_scores',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('survey_year', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_survey_complete', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('comments', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('respondent_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('organization', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('locality', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('region', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_alternate_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('world_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='net_promoter_scores_pkey')
    )
    op.create_table('respondents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('respondent_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('honorific_prefix', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('honorific_suffix', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('job_title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('organization', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_formatted', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('street_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('locality', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('postal_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('telephone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fax_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('international_dialing_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('post_office_box_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mobile_phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mobile_international_dialing_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fax_international_dialing_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('latitude', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('longitude', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_approved', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_newsletter_subscriber', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_administrator', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_alternate_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('world_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('world_sub_region_alternate_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='respondents_pkey')
    )
    op.drop_index(op.f('ix_messagesubprocess_message_id'), table_name='messagesubprocess')
    op.drop_index(op.f('ix_messagesubprocess_id'), table_name='messagesubprocess')
    op.drop_table('messagesubprocess')
    op.drop_index(op.f('ix_message_id'), table_name='message')
    op.drop_index(op.f('ix_message_conversation_id'), table_name='message')
    op.drop_table('message')
    op.drop_index(op.f('ix_conversationdocument_id'), table_name='conversationdocument')
    op.drop_index(op.f('ix_conversationdocument_document_id'), table_name='conversationdocument')
    op.drop_index(op.f('ix_conversationdocument_conversation_id'), table_name='conversationdocument')
    op.drop_table('conversationdocument')
    op.drop_index(op.f('ix_humanfeedback_id'), table_name='humanfeedback')
    op.drop_table('humanfeedback')
    op.drop_index(op.f('ix_document_id'), table_name='document')
    op.drop_table('document')
    op.drop_index(op.f('ix_conversation_id'), table_name='conversation')
    op.drop_table('conversation')
    # ### end Alembic commands ###
